# run cargo clippy and cargo fmt
lint: fmt
	cargo fmt --all --check
	cargo clippy --all-targets -- -D warnings

# run cargo fmt
fmt:
	cargo fmt --all

# run unit test
test:
	cargo test

# license-check Checks for missing license crates
license-check:
	@echo "  >  \033[Checking for license headers...\033[0m "
	cargo deny check license

# build the binary locally
build:
	cargo build --release

############################## Local node ############################
# launch the local node in dev mode
start-dev:
	./target/release/node-template --dev --ws-external

# run setup js script to setup the local substrate node
# substrate node is required, run make start-dev first
run-setup:
	node ./scripts/js/setup.js

############################## E2E test image ###########################
# setup-e2e-test launches the pallet node and runs the setup scripts to config necessary data
setup-e2e-test: build
	./scripts/start_substrate_node.sh
	./scripts/e2e_setup.sh

# build-e2e-test-docker-image builds the e2e test docker image using the data generated by setup-e2e-test
build-e2e-test-docker-image:
	@echo "building the e2e test docker image..."
	@echo "dockerfile in use: Dockerfile_e2e"
	docker build --file ./Dockerfile_e2e -t sygma_substrate_pallets_e2e_preconfigured .

# run the preconfigured e2e docker image
start-e2e-image:
	 docker run -p 9944:9944 -it sygma_substrate_pallets_e2e_preconfigured

# cleanup cleans the e2e test generated files such as ./db, chain-spec.json and logs
cleanup:
	./scripts/cleanup.sh

##################### Phala subbridge integration node E2E test image ##################
setup-subbridge-e2e-test:
	./scripts/phala-subbridge/e2e_build_launch.sh
	./scripts/phala-subbridge/e2e_setup.sh

build-subbridge-e2e-test-docker-image:
	@echo "building the subbridge e2e test docker image..."
	@echo "dockerfile in use: Dockerfile_subbridge_e2e"
	docker build --file ./Dockerfile_e2e -t sygma_substrate_pallets_e2e_preconfigured .
